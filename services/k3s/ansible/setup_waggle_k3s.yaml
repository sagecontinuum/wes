---
- hosts: nx
  vars:
    user: root
    image_storage: /media/plugin-data-k3s
    data_storage: /media/k3s-data
    ecr_registry: registry_address:5000
  strategy: free
  gather_facts: no
  remote_user: "{{ user }}"
  tasks:
    - name: check k3d version
      shell: k3d version
      register: k3d
    - debug:
        msg: "{{k3d.stdout}}"
    - name: query cluster info
      shell: k3d get cluster --no-headers | grep waggle-k3s || true
      register: cluster
    - debug:
        msg: "{{cluster.stdout}}"
    - name: delete existing waggle-k3s cluster
      shell: k3d delete cluster waggle-k3s
      when: cluster.stdout
    #- name: create k3s configuration directory
    #  file:
    #    path: /home/{{ user }}/sage/k3s
    #    state: directory
    #    mode: "u=rwx,g=rx,o=rx"
    #- name: copy ecr registry
    #  copy:
    #    src: etc/rancher/k3s/registries.yaml
    #    dest: /home/{{ user }}/sage/k3s/registries.yaml
    #    owner: "{{ user }}"
    #    group: "{{ user }}"
    #    mode: "u=rwx,g=rx,o=rx"
    #- name: set ecr registry address
    #  replace:
    #    path: /home/{{ user }}/sage/k3s/registries.yaml
    #    regexp: '\$\{ECR_REGISTRY\}'
    #    replace: "{{ ecr_registry }}"
    # - name: create k3s image storage directory
    #   file:
    #     path: "{{ image_storage }}"
    #     state: directory
    #     mode: "u=rwx,g=rx,o=rx"
    - name: create k3s data storage directory
      file:
        path: "{{ data_storage }}"
        state: directory
        mode: "u=rwx,g=rx,o=rx"
    - name: create a new waggle-k3s cluster
      shell: |
        k3d cluster create waggle-k3s \
    #    -v /home/{{ user }}/sage/k3s/registries.yaml:/etc/rancher/k3s/registries.yaml \
        -v {{ data_storage }}:/waggle \
        --api-port 6443 \
        --no-lb \
        --agents 1
    - name: wait for the cluster be spawned
      shell: |
        docker exec k3d-waggle-k3s-master-0 \
        kubectl get nodes --no-headers
      register: result
      until: result.stdout.find("waggle-k3s-master") != -1
      retries: 5
      delay: 10
    - name: wait for the cluster be ready
      shell: |
        docker exec k3d-waggle-k3s-master-0 \
        kubectl get nodes k3d-waggle-k3s-master-0 \
        --no-headers \
        -o custom-columns=STATUS:status.conditions[-1].type
      register: result
      until: result.stdout.find("Ready") != -1
      retries: 5
      delay: 10
